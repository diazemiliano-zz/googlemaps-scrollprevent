{"version":3,"sources":["mapScrollPrevent.js","mapScrollPrevent.coffee"],"names":["$","fn","extend","mapScrollPrevent","options","Log","applyCss","bindEvents","buttonObject","context","coverObject","defaults","longPressDown","longPressUp","mapCSS","opts","overlayObject","progress","runTimeout","wrapIframe","wrapObject","wrapClass","overlayClass","pressDuration","overlay","iconLocked","iconUnloking","iconUnlocked","onMapLock","onMapUnlock","printLog","this","message","dateTime","nowTime","window","console","log","Date","getHours","getMinutes","getSeconds","length","append","closest","is","wrap","children","height","width","css","top","position","left","status","iconObject","progressObject","find","replaceWith","pointer-events","show","hide","clearTimeout","timeOut","mouseDownTime","now","setTimeout","mouseUpTime","bind","start","stop","removeAttr","parent","unwrap","remove","jQuery"],"mappings":"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","file":"mapScrollPrevent.min.js","sourcesContent":["/*!\n * mapScrollPrevent (jQuery Google Maps Scroll Prevent Plugin)\n * Version 0.5.7\n * URL: https://github.com/diazemiliano/mapScrollPrevent\n * Description: mapScrollPrevent is an easy solution to the problem of page\n *              scrolling with Google Maps.\n * Author: Emiliano Díaz https://github.com/diazemiliano/\n * Copyright: The MIT License (MIT) Copyright (c) 2015 Emiliano Díaz.\n */\n(function($) {\n    return $.fn.extend({\n        mapScrollPrevent: function(options) {\n            var Log, applyCss, bindEvents, buttonObject, context, coverObject, defaults, longPressDown, longPressUp, mapCSS, opts, overlayObject, progress, runTimeout, wrapIframe, wrapObject;\n            defaults = {\n\n                /* Custom class for map wrap */\n                wrapClass: \"mapscroll-wrap\",\n\n                /* Custom class for hover div */\n                overlayClass: \"mapscroll-overlay\",\n\n                /* Press Duration */\n                pressDuration: 650,\n\n                /* Hover Message and Icons */\n                overlay: {\n                    iconLocked: \"<svg class=\\\"mapscroll-icon mapscroll-icon-locked\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\" > <path transform=\\\"translate(1)\\\" d=\\\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\\\" /> </svg>\",\n                    iconUnloking: \"<svg class=\\\"mapscroll-icon mapscroll-icon-unlocking\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\"> <path transform=\\\"translate(1)\\\" d=\\\"M1376 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z\\\" /> </svg>\",\n                    iconUnlocked: \"<svg class=\\\"mapscroll-icon mapscroll-icon-unlocked\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\"> <path transform=\\\"translate(1)\\\" d=\\\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\\\" /> </svg>\"\n                },\n\n                /* Callbaks */\n                onMapLock: function() {},\n                onMapUnlock: function() {},\n\n                /* Print Log Messges */\n                printLog: false\n            };\n            opts = $.extend(true, defaults, options);\n\n            /* iframe Map Object */\n            context = $(this);\n\n            /* Logging Style */\n            Log = function(message) {\n                var dateTime, nowTime;\n                if (opts.printLog) {\n                    if (window.console && window.console.log) {\n                        dateTime = new Date();\n                        nowTime = dateTime.getHours() + \":\" + dateTime.getMinutes() + \":\" + dateTime.getSeconds();\n                        return console.log(\"mapScrollPrevent [\" + nowTime + \"] : \" + message);\n                    }\n                }\n            };\n\n            /* Early exit */\n            if (!context.length) {\n                return Log(\"No Iframes detected. Try changing your \\\"selector.\\\"\");\n            } else {\n                Log(context.length + \" iFrames detected.\");\n                mapCSS = \"/* --- mapScrollPrevent.js CSS Classes --- */ .\" + opts.overlayClass + \" { position: absolute; overflow:hidden; cursor: pointer; text-align: center; background-color: rgba(0, 0, 0, 0); } .mapscroll-button { text-rendering: optimizeLegibility; font-family: Lato, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; padding-top: 6px; padding-bottom: 6px; width: 36px; position: absolute; right: 32px; bottom: 29px; border-color: rgba(0, 0, 0, 0.3); color: rgba(58, 132, 223, 0); background-color: rgba(255, 255, 255, 1); color: rgb(58, 132, 223); border-top-right-radius: 2px; border-top-left-radius: 2px; box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px; } .mapscroll-icon { position: relative; z-index: 1; fill: rgba(58, 132, 223, 1); } .mapscroll-progress { position: absolute; top: 0; bottom: 0; left: 0; width: 0%; display: block; background-color: rgba(58, 132, 223, 0.4); } .\" + opts.wrapClass + \" { position: relative; text-align: center; display: inline-block; } .\" + opts.wrapClass + \" iframe { position: relative; top: 0; left: 0; } .\" + opts.overlayClass + \", .mapscroll-button, .mapscroll-icon { transition: all .3s ease-in-out; } .mapscroll-progress { transition: width \" + (opts.pressDuration / 1000) + \"s linear; } /*.flash { animation-duration: .6s; animation-fill-mode: both; animation-name: flash; } @keyframes flash { from, 50%, to { opacity: 1; } 25%, 75% { opacity: 0; } }*/\";\n\n                /* Creates overlay object */\n                overlayObject = $(\"<div class=\\\"\" + opts.overlayClass + \"\\\"></div>\");\n                buttonObject = $(\"<div class=\\\"mapscroll-button\\\"> <div class=\\\"mapscroll-progress\\\"></div> \" + opts.overlay.iconLocked + \" </div>\");\n                wrapObject = $(\"<div class=\\\"\" + opts.wrapClass + \"\\\"></div>\");\n\n                /* Apply all the css */\n                applyCss = function() {\n                    $(\"head\").append(\"<style rel=\\\"stylesheet\\\" type=\\\"text/css\\\"> \" + mapCSS + \"</style>\");\n                    return Log(\"Plugin css applied.\");\n                };\n\n                /* Wraps the iframe */\n                wrapIframe = function() {\n\n                    /* Check first if the iframe is already wraped */\n                    if (!context.closest(\".\" + opts.wrapClass).is(\"div\")) {\n                        context.wrap(wrapObject);\n                        Log(\"Iframe isn't wraped.\");\n                    }\n\n                    /* Update with DOM objects */\n                    wrapObject = context.closest(\".\" + opts.wrapClass).append(buttonObject).append(overlayObject);\n                    overlayObject = wrapObject.children(\".\" + opts.overlayClass);\n                    buttonObject = wrapObject.children(\".mapscroll-button\");\n                    coverObject();\n                    return Log(\"Iframe now wraped.\");\n                };\n\n                /* Dynamic Adjust */\n                coverObject = function() {\n                    overlayObject.height(context.height()).width(context.width()).css({\n                        \"top\": context.position().top,\n                        \"left\": context.position().left\n                    });\n                    return Log(\"Overlay positioned.\");\n                };\n                progress = function(status) {\n                    var iconObject, progressObject;\n                    if (status == null) {\n                        status = \"enable\";\n                    }\n                    progressObject = buttonObject.find(\".mapscroll-progress\");\n                    iconObject = buttonObject.find(\".mapscroll-icon\");\n                    switch (status) {\n                        case \"enable\":\n                            iconObject.replaceWith(\"\" + opts.overlay.iconUnloking);\n                            progressObject.css({\n                                \"width\": \"100%\"\n                            });\n                            return Log(\"Enabling Map.\");\n                        case \"disable\":\n                            context.css({\n                                \"pointer-events\": \"none\"\n                            });\n                            iconObject.replaceWith($(\"\" + opts.overlay.iconLocked));\n                            progressObject.css({\n                                \"width\": \"0%\"\n                            });\n                            overlayObject.show();\n                            opts.onMapLock();\n                            return Log(\"Disabling Map.\");\n                        case \"unlocked\":\n                            context.css({\n                                \"pointer-events\": \"auto\"\n                            });\n                            iconObject.replaceWith(\"\" + opts.overlay.iconUnlocked);\n                            progressObject.css({\n                                \"width\": \"100%\"\n                            });\n                            overlayObject.hide();\n                            opts.onMapUnlock();\n                            return Log(\"Map Enabled.\");\n                    }\n                };\n                runTimeout = function() {\n                    var status;\n                    progress(status = \"unlocked\");\n                    return clearTimeout(this.timeOut);\n                };\n\n                /* Long Press Down Event */\n                longPressDown = function() {\n                    this.mouseDownTime = $.now();\n                    this.timeOut = setTimeout(runTimeout, opts.pressDuration);\n                    progress();\n                    return Log(\"LongPress Started.\");\n                };\n\n                /* Long Press Up Event */\n                longPressUp = function() {\n                    var status;\n                    this.mouseUpTime = $.now() - this.mouseDownTime;\n                    clearTimeout(this.timeOut);\n                    if (this.mouseUpTime < opts.pressDuration) {\n                        progress(status = \"disable\");\n                    } else {\n                        progress(status = \"unlocked\");\n                    }\n                    Log((this.mouseUpTime / 1000) + \"s Pressed. \");\n                    return Log(\"LongPress Stopped.\");\n                };\n\n                /* Bind Events */\n                bindEvents = function() {\n                    $(window).bind(\"resize\", coverObject);\n                    context.bind(\"resize\", coverObject);\n                    wrapObject.bind(\"mousedown touchstart\", longPressDown).bind(\"mouseup touchend\", longPressUp);\n                    return Log(\"Events bounded.\");\n                };\n                return {\n\n                    /* Init wrap and bind events */\n                    start: function() {\n                        Log(\"Starting plugin...\");\n                        applyCss();\n                        wrapIframe();\n                        bindEvents();\n                        return Log(\"Plugin Started.\");\n                    },\n\n                    /* Removes everything */\n                    stop: function() {\n                        Log(\"Stopping plugin...\");\n                        context.removeAttr(\"style\");\n                        if (context.parent().is(\".\" + opts.wrapClass)) {\n                            context.unwrap();\n                        }\n                        $(\".\" + opts.overlayClass).remove();\n                        return Log(\"Plugin Stopped.\");\n                    }\n                };\n            }\n        }\n    });\n})(jQuery);\n","###!\n# mapScrollPrevent (jQuery Google Maps Scroll Prevent Plugin)\n# Version 0.5.7\n# URL: https://github.com/diazemiliano/mapScrollPrevent\n# Description: mapScrollPrevent is an easy solution to the problem of page\n#              scrolling with Google Maps.\n# Author: Emiliano Díaz https://github.com/diazemiliano/\n# Copyright: The MIT License (MIT) Copyright (c) 2015 Emiliano Díaz.\n###\n\n# Reference jQuery\ndo ($ = jQuery) ->\n\n  $.fn.extend\n    mapScrollPrevent : (options) ->\n      defaults =\n        ### Custom class for map wrap ###\n        wrapClass: \"mapscroll-wrap\"\n        ### Custom class for hover div###\n        overlayClass: \"mapscroll-overlay\"\n        ### Press Duration ###\n        pressDuration: 650\n        ### Hover Message and Icons ###\n        overlay:\n          iconLocked :\n            \"<svg class=\\\"mapscroll-icon mapscroll-icon-locked\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\" >\n              <path transform=\\\"translate(1)\\\" d=\\\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\\\" />\n            </svg>\"\n          iconUnloking:\n            \"<svg class=\\\"mapscroll-icon mapscroll-icon-unlocking\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\">\n              <path transform=\\\"translate(1)\\\" d=\\\"M1376 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z\\\" />\n            </svg>\"\n          iconUnlocked:\n            \"<svg class=\\\"mapscroll-icon mapscroll-icon-unlocked\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\">\n              <path transform=\\\"translate(1)\\\" d=\\\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\\\" />\n            </svg>\"\n        ### Callbaks ###\n        onMapLock : ->\n        onMapUnlock : ->\n        ### Print Log Messges ###\n        printLog: false\n\n      opts = $.extend true, defaults, options\n\n      ### iframe Map Object ###\n      context = $(@)\n\n      ### Logging Style ###\n      Log = (message) ->\n        if opts.printLog\n          if window.console and window.console.log\n            dateTime = new Date()\n            nowTime =\n              dateTime.getHours() + \":\" +\n              dateTime.getMinutes() + \":\" +\n              dateTime.getSeconds()\n\n            console.log \"mapScrollPrevent [#{nowTime}] : #{message}\"\n\n      ### Early exit ###\n      unless context.length\n        return Log \"No Iframes detected. Try changing your \\\"selector.\\\"\"\n      else\n        Log \"#{context.length} iFrames detected.\"\n        mapCSS = \"\n          /* --- mapScrollPrevent.js CSS Classes --- */\n          .#{opts.overlayClass} {\n            position: absolute;\n            overflow:hidden;\n            cursor: pointer;\n            text-align: center;\n            background-color: rgba(0, 0, 0, 0);\n          }\n          .mapscroll-button {\n            text-rendering: optimizeLegibility;\n            font-family: Lato, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n            font-size: 13px;\n            padding-top: 6px;\n            padding-bottom: 6px;\n            width: 36px;\n            position: absolute;\n            right: 32px;\n            bottom: 29px;\n            border-color: rgba(0, 0, 0, 0.3);\n            color: rgba(58, 132, 223, 0);\n            background-color: rgba(255, 255, 255, 1);\n            color: rgb(58, 132, 223);\n            border-top-right-radius: 2px;\n            border-top-left-radius: 2px;\n            box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;\n          }\n          .mapscroll-icon {\n            position: relative;\n            z-index: 1;\n            fill: rgba(58, 132, 223, 1);\n          }\n          .mapscroll-progress {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            width: 0%;\n            display: block;\n            background-color: rgba(58, 132, 223, 0.4);\n          }\n          .#{opts.wrapClass} {\n            position: relative;\n            text-align: center;\n            display: inline-block;\n          }\n          .#{opts.wrapClass} iframe {\n            position: relative;\n            top: 0;\n            left: 0;\n          }\n          .#{opts.overlayClass},\n          .mapscroll-button,\n          .mapscroll-icon {\n            transition: all .3s ease-in-out;\n          }\n          .mapscroll-progress {\n            transition: width #{opts.pressDuration/1000}s linear;\n          }\n          /*.flash {\n            animation-duration: .6s;\n            animation-fill-mode: both;\n            animation-name: flash;\n          }\n          @keyframes flash {\n            from, 50%, to {\n              opacity: 1;\n            }\n            25%, 75% {\n              opacity: 0;\n            }\n          }*/\n          \"\n\n        ### Creates overlay object ###\n        overlayObject =\n          $(\"<div class=\\\"#{ opts.overlayClass }\\\"></div>\")\n\n        buttonObject =\n          $(\"\n          <div class=\\\"mapscroll-button\\\">\n            <div class=\\\"mapscroll-progress\\\"></div>\n            #{opts.overlay.iconLocked}\n          </div>\n          \")\n\n        wrapObject =\n          $(\"<div class=\\\"#{ opts.wrapClass }\\\"></div>\")\n\n        ### Apply all the css ###\n        applyCss = ->\n          $(\"head\").append \"<style rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\n          #{ mapCSS }</style>\"\n          Log \"Plugin css applied.\"\n\n        ### Wraps the iframe ###\n        wrapIframe = ->\n          ### Check first if the iframe is already wraped ###\n          unless context.closest(\".#{ opts.wrapClass }\").is \"div\"\n            context.wrap wrapObject\n            Log \"Iframe isn't wraped.\"\n\n          ### Update with DOM objects ###\n          wrapObject =\n            context\n              .closest \".#{ opts.wrapClass }\"\n              .append buttonObject\n              .append overlayObject\n\n          overlayObject =\n            wrapObject\n              .children \".#{ opts.overlayClass }\"\n\n          buttonObject =\n            wrapObject\n              .children \".mapscroll-button\"\n\n          coverObject()\n          Log \"Iframe now wraped.\"\n\n        ### Dynamic Adjust ###\n        coverObject = ->\n          overlayObject\n            .height context.height()\n            .width context.width()\n            .css\n              \"top\": context.position().top\n              \"left\": context.position().left\n          Log \"Overlay positioned.\"\n\n        progress = (status=\"enable\") ->\n          progressObject = buttonObject.find(\".mapscroll-progress\")\n          iconObject = buttonObject.find(\".mapscroll-icon\")\n\n          switch status\n            when \"enable\"\n          #     buttonObject.addClass \"flash\"\n          #       .one \"animationend\", ->\n          #         $(@).removeClass \"flash\"\n              iconObject.replaceWith(\"#{opts.overlay.iconUnloking}\")\n              progressObject.css({\"width\":\"100%\"})\n              Log \"Enabling Map.\"\n\n            when \"disable\"\n              context.css \"pointer-events\":\"none\"\n              iconObject.replaceWith($(\"#{opts.overlay.iconLocked}\"))\n              progressObject.css({\"width\":\"0%\"})\n              overlayObject.show()\n              opts.onMapLock()\n              Log \"Disabling Map.\"\n\n            when \"unlocked\"\n              context.css \"pointer-events\":\"auto\"\n              iconObject.replaceWith(\"#{opts.overlay.iconUnlocked}\")\n              progressObject.css({\"width\":\"100%\"})\n              overlayObject.hide()\n              opts.onMapUnlock()\n              Log \"Map Enabled.\"\n\n        runTimeout = ->\n          progress(status=\"unlocked\")\n          clearTimeout(@timeOut)\n\n        ### Long Press Down Event ###\n        longPressDown = ->\n          @mouseDownTime = $.now()\n          @timeOut = setTimeout runTimeout, opts.pressDuration\n          progress()\n          Log \"LongPress Started.\"\n\n        ### Long Press Up Event ###\n        longPressUp = ->\n          @mouseUpTime = $.now() - @mouseDownTime\n          clearTimeout(@timeOut)\n\n          if @mouseUpTime < opts.pressDuration\n            progress(status=\"disable\")\n          else\n            progress(status=\"unlocked\")\n\n          Log \"#{@mouseUpTime / 1000}s Pressed. \"\n          Log \"LongPress Stopped.\"\n\n        ### Bind Events ###\n        bindEvents = ->\n          $(window)\n            .bind \"resize\", coverObject\n          context\n            .bind \"resize\", coverObject\n\n          wrapObject\n            .bind \"mousedown touchstart\", longPressDown\n            .bind \"mouseup touchend\", longPressUp\n\n          Log \"Events bounded.\"\n\n        ### Init wrap and bind events ###\n        start : ->\n          Log \"Starting plugin...\"\n          applyCss()\n          wrapIframe()\n          bindEvents()\n          Log \"Plugin Started.\"\n\n        ### Removes everything ###\n        stop : ->\n          Log \"Stopping plugin...\"\n          context.removeAttr \"style\"\n          if context.parent().is \".#{ opts.wrapClass }\"\n            context.unwrap()\n\n          $(\".#{ opts.overlayClass }\").remove()\n          Log \"Plugin Stopped.\"\n"],"sourceRoot":"/source/"}
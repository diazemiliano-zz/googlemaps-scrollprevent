{"version":3,"sources":["mapScrollPrevent.js","mapScrollPrevent.coffee"],"names":["$","fn","extend","mapScrollPrevent","options","Log","applyCss","bindEvents","coverObject","defaults","hideOverlay","iframeObject","isTouchScreen","mapCSS","opts","overlayObject","showOverlay","wrapIframe","wrapObject","wrapClass","overlayClass","overlayMessage","printLog","this","message","dateTime","nowTime","Date","getHours","getMinutes","getSeconds","console","log","length","closest","is","wrap","append","children","height","width","css","top","position","left","pointer-events","hide","show","window","bind","on","start","stop","removeAttr","parent","unwrap","remove","jQuery"],"mappings":";;;;;;;;;CASA,SAAUA,GCEP,MAAAA,GAAAC,GAAAC,QDAKC,iBCGJ,SAAAC,GAAA,GAAAC,GAAAC,EAAoBC,EAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CA0BjB,OAzBAT,IACEU,UAAA,WAEAC,aAAA,cAEAC,eAAA,qBAEAC,UAAA,GDKIR,EAAOd,EAAEE,QAAO,EAAMO,EAAUL,GCAtCO,EAAAX,EAAAuB,MACAlB,EAAA,SAAemB,GAET,GAAAC,GAAAC,CACJ,OAAAZ,GAAAQ,UAAQG,EAAR,GAAAE,MACED,EAAeD,EAAAG,WAAA,IAAAH,EAAAI,aAAA,IAAAJ,EAAAK,aAEbC,QAASC,IAAT,qBACSN,EAAe,OACxBF,IALJ,QASFb,EAAAsB,QACA5B,EAAAM,EAAAsB,OAAA,sBAGSpB,EAAa,kDAApBC,EAAAM,aAAA,6HAAAN,EAAAM,aAAA,MAAAN,EAAAM,aAAA,+JAAAN,EAAAM,aAAA,2DAAAN,EAAAM,aAAA,miBAAAN,EAAAM,aAAA,8OAAAN,EAAAK,UAAA,gCAAAL,EAAAK,UAAA,mDAyDAJ,EAAAf,EAAA,eAAAc,EAAAM,aAAA,SAAAN,EAAAO,eAAA,cACAH,EACIlB,EAAA,eAAsBc,EAAAK,UAAc,YAMxCF,EAAA,WAiBE,MAfAN,GAAAuB,QAAA,IAAApB,EAAAK,WAAAgB,GAAA,SACOxB,EAAqByB,KAAKlB,GACnBb,EAAC,yBAGfa,EAAAP,EAAAuB,QAAA,IAAApB,EAAAK,WAAAkB,OAAAtB,GACAA,EAEKG,EAAQoB,SAAU,IAAAxB,EAClBM,cAELZ,IAIAH,EAAA,uBAGFC,EAAA,WAEY,MADDN,GAAA,QAAAqC,OAAA,4CAAAxB,EAAA,YACQR,EAAA,wBADRG,EAAA,WAMT,MADFO,GAAcwB,OAAA5B,EAAA4B,UAAAC,MAAA7B,EAAA6B,SAAAC,KAETC,IAAO/B,EAAagC,WACpBD,IAEQE,KAAajC,EAAWgC,WAA/BC,OAJJvC,EAAA,wBAQFK,EAAA,WAGE,MAFFC,GAAc8B,KACCI,iBAAI,SAAjB9B,EAAA+B,OACczC,EAAd,uBAFYW,EAAA,WAOZ,MAFFL,GAAc8B,KACCI,iBAAI,SAAjB9B,EAAAgC,OACc1C,EAAd,uBAGFO,EAAA,WACA,MAAgBZ,GAAAgD,QAAAC,KAAA,eACD5C,EAAV,uBACG,GAFR,QAKAE,EAAA,WAaI,MAXFP,GAAAgD,QAAAE,GAAA,SAAA1C,GAEGG,EAAauC,GAAA,SADhB1C,GAGAO,EAAAkC,KACgB,QADhBvC,GAGAQ,EACQ+B,KADR,aAAAvC,GAAAuC,KAAA,aAAAjC,GAIQX,EAAA,qBAIV8C,MAAA,WAKE,MAJM9C,GAAA,sBACFC,IACJW,IACAV,IACAF,EAAA,oBAGF+C,KAAA,WAOa,MANN/C,GAAA,sBACDM,EAAJ0C,WAAA,SACa1C,EAAW2C,SAAxBnB,GAAA,IAAArB,EAAAK,YACeR,EAAa4C,SD1DdvD,EAAE,IAAMc,EAAKM,cAAcoC,SC6D7BnD,EAAA,sBAxJGA,EAAC,0DA5BxBoD","file":"mapScrollPrevent.min.js","sourcesContent":["/*!\n * mapScrollPrevent (jQuery Google Maps Scroll Prevent Plugin)\n * Version 0.5.5\n * URL: https://github.com/diazemiliano/mapScrollPrevent\n * Description: mapScrollPrevent is an easy solution to the problem of page\n *              scrolling with Google Maps.\n * Author: Emiliano Díaz https://github.com/diazemiliano/\n * Copyright: The MIT License (MIT) Copyright (c) 2015 Emiliano Díaz.\n */\n(function($) {\n    return $.fn.extend({\n        mapScrollPrevent: function(options) {\n            var Log, applyCss, bindEvents, coverObject, defaults, hideOverlay, iframeObject, isTouchScreen, mapCSS, opts, overlayObject, showOverlay, wrapIframe, wrapObject;\n            defaults = {\n\n                /* Custom class for map wrap */\n                wrapClass: \"map-wrap\",\n\n                /* Custom class for hover div */\n                overlayClass: \"map-overlay\",\n\n                /* Hover Message */\n                overlayMessage: \"Clic para Navegar.\",\n\n                /* Print Log Messges */\n                printLog: false\n            };\n            opts = $.extend(true, defaults, options);\n\n            /* iframe Map Object */\n            iframeObject = $(this);\n            Log = function(message) {\n                var dateTime, nowTime;\n                if (opts.printLog) {\n                    dateTime = new Date();\n                    nowTime = dateTime.getHours() + \":\" + dateTime.getMinutes() + \":\" + dateTime.getSeconds();\n                    return console.log(\"mapScrollPrevent [\" + nowTime + \"] : \" + message);\n                }\n            };\n\n            /* Early exit */\n            if (!iframeObject.length) {\n                return Log(\"No Iframes detected. Try changing your \\\"selector.\\\"\");\n            } else {\n                Log(iframeObject.length + \" iFrames detected.\");\n                mapCSS = \"/* --- mapScrollPrevent.js CSS Classes --- */ .\" + opts.overlayClass + \" { position: absolute; overflow:hidden; cursor: pointer; text-align: center; background-color: rgba(255, 255, 255, 0); } .\" + opts.overlayClass + \", .\" + opts.overlayClass + \" p { -moz-transition: all .3s ease-in-out; -o-transition: all .3s ease-in-out; -webkit-transition: all .3s ease-in-out; transition: all .3s ease-in-out; } .\" + opts.overlayClass + \":hover { background-color: rgba(255, 255, 255, 0.8); } .\" + opts.overlayClass + \" p { font-family: Lato, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; padding-top: 2.5%; padding-bottom: 2.5%; margin-right: auto; margin-left: auto; width: 70%; position: relative; top: 50%; transform: translateY(-50%); border-color: rgba(0, 0, 0, 0.3); color: rgba(58, 132, 223, 0); background-color: rgba(0, 0, 0, 0); -moz-border-radius-topleft: 2px; -webkit-border-top-left-radius: 2px; border-top-left-radius: 2px; -moz-border-radius-topright: 2px; -webkit-border-top-right-radius: 2px; border-top-right-radius: 2px; } .\" + opts.overlayClass + \":hover p { background-color: rgb(255, 255, 255); color: rgb(58, 132, 223); -moz-box-shadow: rgba(0,0,0,0.3) 0px 1px 4px -1px; -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px; box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px; } .\" + opts.wrapClass + \" { display: inline-block; } .\" + opts.wrapClass + \" iframe { position: relative; top: 0; left: 0; }\";\n\n                /* Creates overlay object */\n                overlayObject = $(\"<div class=\\\"\" + opts.overlayClass + \"\\\"> <p>\" + opts.overlayMessage + \"</p></div>\");\n                wrapObject = $(\"<div class=\\\"\" + opts.wrapClass + \"\\\"></div>\");\n\n                /* Wraps the iframe */\n                wrapIframe = function() {\n\n                    /* Check first if the iframe is already wraped */\n                    if (!iframeObject.closest(\".\" + opts.wrapClass).is(\"div\")) {\n                        iframeObject.wrap(wrapObject);\n                        Log(\"Iframe isn't wraped.\");\n                    }\n\n                    /* Update variable objects with DOM objects */\n                    wrapObject = iframeObject.closest(\".\" + opts.wrapClass).append(overlayObject);\n                    overlayObject = wrapObject.children(\".\" + opts.overlayClass);\n                    coverObject();\n                    return Log(\"Iframe now wraped.\");\n                };\n\n                /* Apply all the css */\n                applyCss = function() {\n                    $(\"head\").append(\"<style rel=\\\"stylesheet\\\" type=\\\"text/css\\\"> \" + mapCSS + \"</style>\");\n                    return Log(\"Plugin css applied.\");\n                };\n                coverObject = function() {\n                    overlayObject.height(iframeObject.height()).width(iframeObject.width()).css({\n                        \"top\": iframeObject.position().top,\n                        \"left\": iframeObject.position().left\n                    });\n                    return Log(\"Overlay positioned.\");\n                };\n\n                /* Overlay functions */\n                hideOverlay = function() {\n                    iframeObject.css({\n                        \"pointer-events\": \"auto\"\n                    });\n                    overlayObject.hide();\n                    return Log(\"Overlay is hidden.\");\n                };\n                showOverlay = function() {\n                    iframeObject.css({\n                        \"pointer-events\": \"none\"\n                    });\n                    overlayObject.show();\n                    return Log(\"Overlay is showed.\");\n                };\n\n                /* Check TouchScreen */\n                isTouchScreen = function() {\n                    if ($(window).bind(\"touchstart\")) {\n                        Log(\"Is a touch screen.\");\n                        return true;\n                    }\n                };\n\n                /* Bind Events */\n                bindEvents = function() {\n\n                    /* Dynamic Adjust */\n                    $(window).on(\"resize\", coverObject);\n                    iframeObject.on(\"resize\", coverObject);\n                    overlayObject.bind(\"click\", hideOverlay);\n                    wrapObject.bind(\"mouseleave\", hideOverlay).bind(\"mouseenter\", showOverlay);\n                    return Log(\"Events bounded.\");\n                };\n                return {\n\n                    /* Init wrap and bind events */\n                    start: function() {\n                        Log(\"Starting plugin...\");\n                        applyCss();\n                        wrapIframe();\n                        bindEvents();\n                        return Log(\"Plugin Started.\");\n                    },\n\n                    /* Removes everything */\n                    stop: function() {\n                        Log(\"Stopping plugin...\");\n                        iframeObject.removeAttr(\"style\");\n                        if (iframeObject.parent().is(\".\" + opts.wrapClass)) {\n                            iframeObject.unwrap();\n                        }\n                        $(\".\" + opts.overlayClass).remove();\n                        return Log(\"Plugin Stopped.\");\n                    }\n                };\n            }\n        }\n    });\n})(jQuery);\n","###!\n# mapScrollPrevent (jQuery Google Maps Scroll Prevent Plugin)\n# Version 0.5.5\n# URL: https://github.com/diazemiliano/mapScrollPrevent\n# Description: mapScrollPrevent is an easy solution to the problem of page\n#              scrolling with Google Maps.\n# Author: Emiliano Díaz https://github.com/diazemiliano/\n# Copyright: The MIT License (MIT) Copyright (c) 2015 Emiliano Díaz.\n###\n\n# Reference jQuery\ndo ($ = jQuery) ->\n\n  $.fn.extend\n    mapScrollPrevent : (options) ->\n      defaults =\n        ### Custom class for map wrap ###\n        wrapClass: \"map-wrap\"\n        ### Custom class for hover div###\n        overlayClass: \"map-overlay\"\n        ### Hover Message ###\n        overlayMessage: \"Clic para Navegar.\"\n        ### Print Log Messges ###\n        printLog: false\n\n      opts = $.extend true, defaults, options\n\n      ### iframe Map Object ###\n      iframeObject = $(@)\n\n      Log = (message) ->\n        if opts.printLog\n          dateTime = new Date()\n          nowTime =\n            dateTime.getHours() + \":\" +\n            dateTime.getMinutes() + \":\" +\n            dateTime.getSeconds()\n\n          console.log \"mapScrollPrevent [#{nowTime}] : #{message}\"\n\n      ### Early exit ###\n      unless iframeObject.length\n        return Log \"No Iframes detected. Try changing your \\\"selector.\\\"\"\n      else\n        Log \"#{iframeObject.length} iFrames detected.\"\n        mapCSS = \"\n          /* --- mapScrollPrevent.js CSS Classes --- */\n          .#{ opts.overlayClass } {\n            position: absolute;\n            overflow:hidden;\n            cursor: pointer;\n            text-align: center;\n            background-color: rgba(255, 255, 255, 0);\n          }\n          .#{ opts.overlayClass },\n          .#{ opts.overlayClass } p {\n            -moz-transition: all .3s ease-in-out;\n            -o-transition: all .3s ease-in-out;\n            -webkit-transition: all .3s ease-in-out;\n            transition: all .3s ease-in-out;\n          }\n          .#{ opts.overlayClass }:hover {\n            background-color: rgba(255, 255, 255, 0.8);\n          }\n          .#{ opts.overlayClass } p {\n            font-family: Lato, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n            font-size: 13px;\n            padding-top: 2.5%;\n            padding-bottom: 2.5%;\n            margin-right: auto;\n            margin-left: auto;\n            width: 70%;\n            position: relative;\n            top: 50%;\n            transform: translateY(-50%);\n            border-color: rgba(0, 0, 0, 0.3);\n            color: rgba(58, 132, 223, 0);\n            background-color: rgba(0, 0, 0, 0);\n            -moz-border-radius-topleft: 2px;\n            -webkit-border-top-left-radius: 2px;\n            border-top-left-radius: 2px;\n            -moz-border-radius-topright: 2px;\n            -webkit-border-top-right-radius: 2px;\n            border-top-right-radius: 2px;\n          }\n          .#{ opts.overlayClass }:hover p {\n            background-color: rgb(255, 255, 255);\n            color: rgb(58, 132, 223);\n            -moz-box-shadow: rgba(0,0,0,0.3) 0px 1px 4px -1px;\n            -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;\n            box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;\n          }\n          .#{ opts.wrapClass } {\n            display: inline-block;\n          }\n          .#{ opts.wrapClass } iframe {\n            position: relative;\n            top: 0;\n            left: 0;\n          }\"\n\n        ### Creates overlay object ###\n        overlayObject =\n          $(\"<div class=\\\"#{ opts.overlayClass }\\\">\n          <p>#{ opts.overlayMessage }</p></div>\")\n\n        wrapObject =\n          $(\"<div class=\\\"#{ opts.wrapClass }\\\"></div>\")\n\n        ### Wraps the iframe ###\n        wrapIframe = ->\n          ### Check first if the iframe is already wraped ###\n          unless iframeObject.closest(\".#{ opts.wrapClass }\").is \"div\"\n            iframeObject.wrap wrapObject\n            Log \"Iframe isn't wraped.\"\n\n          ### Update variable objects with DOM objects ###\n          wrapObject =\n            iframeObject\n              .closest \".#{ opts.wrapClass }\"\n              .append overlayObject\n\n          overlayObject =\n            wrapObject\n              .children \".#{ opts.overlayClass }\"\n\n          coverObject()\n          Log \"Iframe now wraped.\"\n\n        ### Apply all the css ###\n        applyCss = ->\n          $(\"head\").append \"<style rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\n          #{ mapCSS }</style>\"\n          Log \"Plugin css applied.\"\n\n        coverObject = ->\n          overlayObject\n            .height iframeObject.height()\n            .width iframeObject.width()\n            .css\n              \"top\": iframeObject.position().top\n              \"left\": iframeObject.position().left\n          Log \"Overlay positioned.\"\n\n        ### Overlay functions ###\n        hideOverlay = ->\n          iframeObject.css \"pointer-events\":\"auto\"\n          overlayObject.hide()\n          Log \"Overlay is hidden.\"\n\n        showOverlay = ->\n          iframeObject.css \"pointer-events\":\"none\"\n          overlayObject.show()\n          Log \"Overlay is showed.\"\n\n        ### Check TouchScreen ###\n        isTouchScreen = ->\n          if $(window).bind \"touchstart\"\n            Log \"Is a touch screen.\"\n            true\n\n        ### Bind Events ###\n        bindEvents = ->\n          ### Dynamic Adjust ###\n          $(window)\n            .on \"resize\", coverObject\n\n          iframeObject\n            .on \"resize\", coverObject\n\n          overlayObject\n            .bind \"click\", hideOverlay\n\n          wrapObject\n            .bind \"mouseleave\", hideOverlay\n            .bind \"mouseenter\", showOverlay\n          Log \"Events bounded.\"\n\n        ### Init wrap and bind events ###\n        start : ->\n          Log \"Starting plugin...\"\n          applyCss()\n          wrapIframe()\n          bindEvents()\n          Log \"Plugin Started.\"\n\n        ### Removes everything ###\n        stop : ->\n          Log \"Stopping plugin...\"\n          iframeObject.removeAttr \"style\"\n          if iframeObject.parent().is \".#{ opts.wrapClass }\"\n            iframeObject.unwrap()\n\n          $(\".#{ opts.overlayClass }\").remove()\n          Log \"Plugin Stopped.\"\n"],"sourceRoot":"/source/"}
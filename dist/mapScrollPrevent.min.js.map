{"version":3,"sources":["mapScrollPrevent.coffee","mapScrollPrevent.js"],"names":["indexOf","item","i","l","this","length","jQuery","fn","extend","mapScrollPrevent","options","applyCss","coverObject","hideOverlay","iframeObject","isTouchScreen","mapCSS","opts","overlayObject","showOverlay","start","stop","wrapIframe","wrapObject","$","wrapClass","overlayClass","overlayMessage","inTouch","ajaxSetup","cache","closest","is","wrap","append","children","height","width","css","top","position","left","pointer-events","fadeOut","show","call","window","navigator","MaxTouchPoints","msMaxTouchPoints","on","bind","removeAttr","parent","unwrap","remove"],"mappings":";;;;;;;;;CAAA,WAAA,GAAAA,MAAAA,SAAA,SAAAC,GAAA,IAAA,GAAAC,GAAA,EAAAC,EAAAC,KAAAC,OAAAF,EAAAD,EAAAA,IAAA,GAAAA,IAAAE,OAAAA,KAAAF,KAAAD,EAAA,MAAAC,EAAA,OAAA,GAUAI,QAAOC,GAAGC,QACRC,iBAAmB,SAACC,GAClB,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAsFA,OAtFAN,GAAOO,EAAEhB,QAAO,GAEdiB,UAAU,WAEVC,aAAa,cAEbC,eAAe,qBAEfC,SAAQ,EAERP,MAAK,GACJX,GAEHM,EAAS,kDAEHC,EAAKS,aAAc,qUAWnBT,EAAKS,aAAc,4DAGnBT,EAAKS,aAAc,msBAyBnBT,EAAKS,aAAc,8OAOnBT,EAAKQ,UAAW,gCAGhBR,EAAKQ,UAAW,sDAOtBX,EAAeU,EAAEpB,MAGjBc,EACEM,EAAE,eACFP,EAAKS,aAAe,QACpBT,EAAKU,eACL,cAEFJ,EACEC,EAAE,eACFP,EAAKQ,UACL,YAGEX,EAAaT,QAIjBmB,EAAEK,WAAYC,OAAO,IAGrBR,EAAa,WCjET,MDmEER,GAAaiB,QAAQ,IAAMd,EAAKQ,WAAWO,GAAG,QAChDlB,EAAamB,KAAKV,GAGpBA,EAAaT,EACIiB,QAAQ,IAAMd,EAAKQ,WACnBS,OAAOhB,GACxBA,EAAgBK,EACGY,SAAS,IAAMlB,EAAKS,cAEvCd,KAGFD,EAAW,WC7EP,MD8EFa,GAAE,QACCU,OAAO,2CACwClB,EAAO,aAG3DJ,EAAc,WChFV,MDiFFM,GACGkB,OAAOtB,EAAasB,UACpBC,MAAMvB,EAAauB,SACnBC,KACCC,IAAMzB,EAAa0B,WAAWD,IAC9BE,KAAO3B,EAAa0B,WAAWC,QAIrC5B,EAAc,WCjFV,MDkFFC,GAAawB,KAAMI,iBAAiB,SACpClB,EAAEpB,MAAMuC,WAEVxB,EAAc,WC9EV,MD+EFP,KACAE,EAAawB,KAAMI,iBAAiB,SACpCxB,EAAc0B,QAEhB7B,EAAgB,WACd,MAAGf,GAAA6C,KAAkBC,OAAlB,iBAAA,GACHC,UAAUC,eAAiB,GAC3BD,UAAUE,iBAAmB,GACpB,EAHT,QAMF7B,EAAQ,WAON,MANAT,KACAW,IAEAE,EAAEsB,QACCI,GAAG,SAAUtC,GAEbG,KACDS,EAAEsB,QACCI,GAAG,aAAc/B,GACjB+B,GAAG,iBAAkBrC,GAExBK,EACGiC,KAAK,QAAStC,KAEjBK,EACGiC,KAAK,QAAStC,GACjBU,EACG4B,KAAK,aAAchC,KAG1BE,EAAO,WCvFH,MDwFFP,GAAasC,WAAW,SACrBtC,EAAauC,SAASrB,GAAG,IAAMf,EAAKQ,YACrCX,EAAawC,SAEf9B,EAAE,IAAMP,EAAKS,cAAc6B,UAGzBtC,EAAKI,KAGPA,IAFAD,KApFF,YCFDyB,KAAKzC","file":"mapScrollPrevent.min.js","sourcesContent":["###!\n# mapScrollPrevent (jQuery Google Maps Scroll Prevent Plugin)\n# Version 0.5.4\n# URL: https://github.com/diazemiliano/mapScrollPrevent\n# Description: mapScrollPrevent is an easy solution to the problem of page\n#              scrolling with Google Maps.\n# Author: Emiliano Díaz https://github.com/diazemiliano/\n# Copyright: The MIT License (MIT) Copyright (c) 2015 Emiliano Díaz.\n###\n\njQuery.fn.extend\n  mapScrollPrevent : (options) ->\n    opts = $.extend true , {\n      # Custom class for map wrap\n      wrapClass:\"map-wrap\",\n      # Custom class for hover div\n      overlayClass:\"map-overlay\",\n      # Hover Message\n      overlayMessage:\"Clic para Navegar.\",\n      # Present on touchscreen devices\n      inTouch:true,\n      # Removes mapScroll\n      stop:false,\n    }, options\n\n    mapCSS = \"\n      /* --- mapScrollPrevent.js CSS Classes --- */\n      .#{ opts.overlayClass } {\n        position: absolute;\n        overflow:hidden;\n        cursor: pointer;\n        text-align: center;\n        background-color: rgba(255, 255, 255, 0);\n        -moz-transition: background-color .3s ease-in-out;\n        -o-transition: background-color .3s ease-in-out;\n        -webkit-transition: background-color .3s ease-in-out;\n        transition: background-color .3s ease-in-out;\n      }\n      .#{ opts.overlayClass }:hover {\n        background-color : rgba(255, 255, 255, 0.8);\n      }\n      .#{ opts.overlayClass } p {\n        font-family: Lato, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n        font-size: 13px;\n        padding-top: 2.5%;\n        padding-bottom: 2.5%;\n        margin-right: auto;\n        margin-left: auto;\n        width: 70%;\n        position: relative;\n        top: 50%;\n        transform: translateY(-50%);\n        border-color: rgba(0, 0, 0, 0.3);\n        color: rgba(58, 132, 223, 0);\n        background-color: rgba(0, 0, 0, 0);\n        -moz-transition: color 0.3s ease-in-out;\n        -o-transition: color 0.3s ease-in-out;\n        -webkit-transition: color 0.3s ease-in-out;\n        transition: color 0.3s ease-in-out;\n        -moz-border-radius-topleft: 2px;\n        -webkit-border-top-left-radius: 2px;\n        border-top-left-radius: 2px;\n        -moz-border-radius-topright: 2px;\n        -webkit-border-top-right-radius: 2px;\n        border-top-right-radius: 2px;\n      }\n      .#{ opts.overlayClass }:hover p {\n        background-color: rgb(255, 255, 255);\n        color: rgb(58, 132, 223);\n        -moz-box-shadow: rgba(0,0,0,0.3) 0px 1px 4px -1px;\n        -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;\n        box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;\n      }\n      .#{ opts.wrapClass } {\n        display: inline-block;\n      }\n      .#{ opts.wrapClass } iframe {\n        position:  relative;\n        top:  0;\n        left:  0;\n      }\"\n\n    # iframe Map Object\n    iframeObject = $(this)\n\n    # Creates overlay object\n    overlayObject =\n      $(\"<div class=\\\"\" +\n      opts.overlayClass + \"\\\"><p>\" +\n      opts.overlayMessage +\n      \"</p></div>\")\n\n    wrapObject =\n      $(\"<div class=\\\"\" +\n      opts.wrapClass +\n      \"\\\"></div>\")\n\n    # Early exit\n    if !iframeObject.length\n      return\n\n    # Enable AJAX cache as default\n    $.ajaxSetup { cache: true }\n\n    # Wraps the iframe\n    wrapIframe = ->\n      # Check first if the iframe is already wraped\n      if !iframeObject.closest(\".\" + opts.wrapClass).is(\"div\")\n        iframeObject.wrap(wrapObject)\n\n      # Update variable objects with DOM objects\n      wrapObject = iframeObject\n                      .closest(\".\" + opts.wrapClass)\n                      .append(overlayObject)\n      overlayObject = wrapObject\n                        .children(\".\" + opts.overlayClass)\n\n      coverObject()\n\n    # Apply all the css\n    applyCss = ->\n      $(\"head\")\n        .append(\"\n          <style rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\"+mapCSS+\"</style>\n        \")\n\n    coverObject = ->\n      overlayObject\n        .height(iframeObject.height())\n        .width(iframeObject.width())\n        .css({\n          \"top\":iframeObject.position().top,\n          \"left\":iframeObject.position().left\n        })\n\n    # Overlay functions\n    hideOverlay = ->\n      iframeObject.css({ \"pointer-events\":\"auto\" })\n      $(this).fadeOut()\n\n    showOverlay = ->\n      coverObject()\n      iframeObject.css({ \"pointer-events\":\"none\" })\n      overlayObject.show()\n    # Check touchscreen support\n    isTouchScreen = ->\n      if \"ontouchstart\" in window or\n      navigator.MaxTouchPoints > 0 or\n      navigator.msMaxTouchPoints > 0\n        return true\n\n    # Init wrap and bind events\n    start = ->\n      applyCss()\n      wrapIframe()\n\n      $(window)\n        .on(\"resize\", coverObject)\n\n      if isTouchScreen()\n        $(window)\n          .on(\"touchstart\", showOverlay)\n          .on(\"touchend click\", hideOverlay)\n\n        overlayObject\n          .bind(\"click\", hideOverlay)\n      else\n        overlayObject\n          .bind(\"click\", hideOverlay)\n        wrapObject\n          .bind(\"mouseenter\", showOverlay)\n\n    # Removes everithing\n    stop = ->\n      iframeObject.removeAttr(\"style\")\n      if iframeObject.parent().is(\".\" + opts.wrapClass)\n        iframeObject.unwrap()\n\n      $(\".\" + opts.overlayClass).remove()\n\n    # Present always in no-touch devices\n    if !opts.stop\n      start()\n    else\n      stop()\n",null],"sourceRoot":"/source/"}
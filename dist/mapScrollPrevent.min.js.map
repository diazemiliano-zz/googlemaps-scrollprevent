{"version":3,"sources":["mapScrollPrevent.js","mapScrollPrevent.coffee"],"names":["hasProp","hasOwnProperty","$","fn","extend","mapScrollPrevent","options","Log","applyCss","bindEvents","buttonObject","context","coverObject","defaults","item","longPressDown","longPressUp","mapCSS","opts","overlayObject","progress","ref","runTimeout","value","wrapIframe","wrapObject","class","wrap","overlay","button","icon","pressDuration","iconLocked","iconUnloking","iconUnlocked","onMapLock","onMapUnlock","printLog","this","message","dateTime","nowTime","window","console","log","Date","getHours","getMinutes","getSeconds","length","call","find","attr","prop","append","closest","is","children","height","width","css","top","position","left","status","iconObject","progressObject","replaceWith","pointer-events","show","hide","clearTimeout","timeOut","mouseDownTime","now","setTimeout","mouseUpTime","bind","start","stop","removeAttr","parent","unwrap","remove","jQuery"],"mappings":"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","file":"mapScrollPrevent.min.js","sourcesContent":["/*!\n * mapScrollPrevent (jQuery Google Maps Scroll Prevent Plugin)\n * Version 0.6.1\n * URL: https://github.com/diazemiliano/mapScrollPrevent\n * Description: mapScrollPrevent is an easy solution to the problem of page\n *              scrolling with Google Maps.\n * Author: Emiliano Díaz https://github.com/diazemiliano/\n * Copyright: The MIT License (MIT) Copyright (c) 2015 Emiliano Díaz.\n */\nvar hasProp = {}.hasOwnProperty;\n\n(function($) {\n    return $.fn.extend({\n        mapScrollPrevent: function(options) {\n            var Log, applyCss, bindEvents, buttonObject, context, coverObject, defaults, item, longPressDown, longPressUp, mapCSS, opts, overlayObject, progress, ref, runTimeout, value, wrapIframe, wrapObject;\n            defaults = {\n                \"class\": {\n\n                    /* class for map wrap */\n                    wrap: \"mapscroll-wrap\",\n\n                    /* class for hover div */\n                    overlay: \"mapscroll-overlay\",\n\n                    /* class for progress bar */\n                    progress: \"mapscroll-progress\",\n\n                    /* class for the button */\n                    button: \"mapscroll-button\",\n\n                    /* class for svg icons */\n                    icon: \"mapscroll-icon\"\n                },\n\n                /* Press Duration */\n                pressDuration: 650,\n\n                /* Buton Icons */\n                overlay: {\n                    iconLocked: \"<svg class=\\\"mapscroll-icon-locked\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\" > <path transform=\\\"translate(1)\\\" d=\\\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\\\" /> </svg>\",\n                    iconUnloking: \"<svg class=\\\"mapscroll-icon-unlocking\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\"> <path transform=\\\"translate(1)\\\" d=\\\"M1376 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z\\\" /> </svg>\",\n                    iconUnlocked: \"<svg class=\\\"mapscroll-icon-unlocked\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\"> <path transform=\\\"translate(1)\\\" d=\\\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\\\" /> </svg>\"\n                },\n\n                /* Callbaks */\n                onMapLock: function() {},\n                onMapUnlock: function() {},\n\n                /* Print Log Messges */\n                printLog: false\n            };\n            opts = $.extend(true, defaults, options);\n\n            /* iframe Map Object */\n            context = $(this);\n\n            /* Logging Style */\n            Log = function(message) {\n                var dateTime, nowTime;\n                if (opts.printLog) {\n                    if (window.console && window.console.log) {\n                        dateTime = new Date();\n                        nowTime = dateTime.getHours() + \":\" + dateTime.getMinutes() + \":\" + dateTime.getSeconds();\n                        return console.log(\"mapScrollPrevent [\" + nowTime + \"] : \" + message);\n                    }\n                }\n            };\n\n            /* Early exit */\n            if (!context.length) {\n                return Log(\"No Iframes detected. Try changing your \\\"selector.\\\"\");\n            } else {\n                Log(context.length + \" iFrames detected.\");\n                mapCSS = \"/* --- mapScrollPrevent.js CSS Classes --- */ .\" + opts[\"class\"].overlay + \" { position: absolute; overflow:hidden; cursor: pointer; text-align: center; background-color: rgba(0, 0, 0, 0); } .\" + opts[\"class\"].button + \" { text-rendering: optimizeLegibility; font-family: Lato, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; padding-top: 6px; padding-bottom: 6px; width: 36px; position: absolute; right: 32px; bottom: 29px; border-color: rgba(0, 0, 0, 0.3); color: rgba(58, 132, 223, 0); background-color: rgba(255, 255, 255, 1); color: rgb(58, 132, 223); border-top-right-radius: 2px; border-top-left-radius: 2px; box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px; } .\" + opts[\"class\"].icon + \" { position: relative; z-index: 1; fill: rgba(58, 132, 223, 1); } .\" + opts[\"class\"].progress + \" { position: absolute; top: 0; bottom: 0; left: 0; width: 0%; display: block; background-color: rgba(58, 132, 223, 0.4); } .\" + opts[\"class\"].wrap + \" { position: relative; text-align: center; display: inline-block; } .\" + opts[\"class\"].wrap + \" iframe { position: relative; top: 0; left: 0; } .\" + opts[\"class\"].overlay + \", .\" + opts[\"class\"].button + \", .\" + opts[\"class\"].icon + \" { transition: all .3s ease-in-out; } .\" + opts[\"class\"].progress + \" { transition: width \" + (opts.pressDuration / 1000) + \"s linear; }\";\n\n                /* Change the SVG Icon classes if founded.\n                Otherwise replace with default icons\n                 */\n                ref = opts.overlay;\n                for (item in ref) {\n                    if (!hasProp.call(ref, item)) continue;\n                    value = ref[item];\n                    if ($(\"\" + value).find(\"svg\")) {\n                        Log(\"SVG Icons founded... Replacing classes.\");\n                        opts.overlay[\"\" + item] = $(\"\" + value).attr(\"class\", opts[\"class\"].icon + \" \" + ($(\"\" + value).attr(\"class\"))).prop('outerHTML');\n                    } else {\n                        opts.overlay[\"\" + item] = defaults.overlay[\"\" + item];\n                        Log(\"Invalid Icons founded... Replacing with defaults.\");\n                    }\n                }\n\n                /* Creates overlay object */\n                overlayObject = $(\"<div class=\\\"\" + opts[\"class\"].overlay + \"\\\"></div>\");\n                buttonObject = $(\"<div class=\\\"\" + opts[\"class\"].button + \"\\\"> <div class=\\\"\" + opts[\"class\"].progress + \"\\\"> </div> \" + opts.overlay.iconLocked + \" </div>\");\n                wrapObject = $(\"<div class=\\\"\" + opts[\"class\"].wrap + \"\\\"></div>\");\n\n                /* Apply all the css */\n                applyCss = function() {\n                    $(\"head\").append(\"<style rel=\\\"stylesheet\\\" type=\\\"text/css\\\"> \" + mapCSS + \"</style>\");\n                    return Log(\"Plugin css applied.\");\n                };\n\n                /* Wraps the iframe */\n                wrapIframe = function() {\n\n                    /* Check first if the iframe is already wraped */\n                    if (!context.closest(\".\" + opts[\"class\"].wrap).is(\"div\")) {\n                        context.wrap(wrapObject);\n                        Log(\"Iframe isn't wraped.\");\n                    }\n\n                    /* Update with DOM objects */\n                    wrapObject = context.closest(\".\" + opts[\"class\"].wrap).append(buttonObject).append(overlayObject);\n                    overlayObject = wrapObject.children(\".\" + opts[\"class\"].overlay);\n                    buttonObject = wrapObject.children(\".\" + opts[\"class\"].button);\n                    coverObject();\n                    return Log(\"Iframe now wraped.\");\n                };\n\n                /* Dynamic Adjust */\n                coverObject = function() {\n                    overlayObject.height(context.height()).width(context.width()).css({\n                        \"top\": context.position().top,\n                        \"left\": context.position().left\n                    });\n                    return Log(\"Overlay positioned.\");\n                };\n                progress = function(status) {\n                    var iconObject, progressObject;\n                    if (status == null) {\n                        status = \"enable\";\n                    }\n                    progressObject = buttonObject.find(\".\" + opts[\"class\"].progress);\n                    iconObject = buttonObject.find(\".\" + opts[\"class\"].icon);\n                    switch (status) {\n                        case \"enable\":\n                            iconObject.replaceWith(\"\" + opts.overlay.iconUnloking);\n                            progressObject.css({\n                                \"width\": \"100%\"\n                            });\n                            return Log(\"Enabling Map.\");\n                        case \"disable\":\n                            context.css({\n                                \"pointer-events\": \"none\"\n                            });\n                            iconObject.replaceWith($(\"\" + opts.overlay.iconLocked));\n                            progressObject.css({\n                                \"width\": \"0%\"\n                            });\n                            overlayObject.show();\n                            opts.onMapLock();\n                            return Log(\"Disabling Map.\");\n                        case \"unlocked\":\n                            context.css({\n                                \"pointer-events\": \"auto\"\n                            });\n                            iconObject.replaceWith(\"\" + opts.overlay.iconUnlocked);\n                            progressObject.css({\n                                \"width\": \"100%\"\n                            });\n                            overlayObject.hide();\n                            opts.onMapUnlock();\n                            return Log(\"Map Enabled.\");\n                    }\n                };\n                runTimeout = function() {\n                    var status;\n                    progress(status = \"unlocked\");\n                    return clearTimeout(this.timeOut);\n                };\n\n                /* Long Press Down Event */\n                longPressDown = function() {\n                    this.mouseDownTime = $.now();\n                    this.timeOut = setTimeout(runTimeout, opts.pressDuration);\n                    progress();\n                    return Log(\"LongPress Started.\");\n                };\n\n                /* Long Press Up Event */\n                longPressUp = function() {\n                    var status;\n                    this.mouseUpTime = $.now() - this.mouseDownTime;\n                    clearTimeout(this.timeOut);\n                    if (this.mouseUpTime < opts.pressDuration) {\n                        progress(status = \"disable\");\n                    } else {\n                        progress(status = \"unlocked\");\n                    }\n                    Log((this.mouseUpTime / 1000) + \"s Pressed. \");\n                    return Log(\"LongPress Stopped.\");\n                };\n\n                /* Bind Events */\n                bindEvents = function() {\n                    $(window).bind(\"resize\", coverObject);\n                    context.bind(\"resize\", coverObject);\n                    wrapObject.bind(\"mousedown touchstart\", longPressDown).bind(\"mouseup touchend\", longPressUp);\n                    return Log(\"Events bounded.\");\n                };\n                return {\n\n                    /* Init wrap and bind events */\n                    start: function() {\n                        Log(\"Starting plugin...\");\n                        applyCss();\n                        wrapIframe();\n                        bindEvents();\n                        return Log(\"Plugin Started.\");\n                    },\n\n                    /* Removes everything */\n                    stop: function() {\n                        Log(\"Stopping plugin...\");\n                        context.removeAttr(\"style\");\n                        if (context.parent().is(\".\" + opts[\"class\"].wrap)) {\n                            context.unwrap();\n                        }\n                        $(\".\" + opts[\"class\"].overlay).remove();\n                        return Log(\"Plugin Stopped.\");\n                    }\n                };\n            }\n        }\n    });\n})(jQuery);\n","###!\n# mapScrollPrevent (jQuery Google Maps Scroll Prevent Plugin)\n# Version 0.6.1\n# URL: https://github.com/diazemiliano/mapScrollPrevent\n# Description: mapScrollPrevent is an easy solution to the problem of page\n#              scrolling with Google Maps.\n# Author: Emiliano Díaz https://github.com/diazemiliano/\n# Copyright: The MIT License (MIT) Copyright (c) 2015 Emiliano Díaz.\n###\n\n# Reference jQuery\ndo ($ = jQuery) ->\n\n  $.fn.extend\n    mapScrollPrevent : (options) ->\n      defaults =\n        class:\n          ### class for map wrap ###\n          wrap: \"mapscroll-wrap\"\n          ### class for hover div ###\n          overlay: \"mapscroll-overlay\"\n          ### class for progress bar ###\n          progress: \"mapscroll-progress\"\n          ### class for the button ###\n          button: \"mapscroll-button\"\n          ### class for svg icons ###\n          icon: \"mapscroll-icon\"\n        ### Press Duration ###\n        pressDuration: 650\n        ### Buton Icons ###\n        overlay:\n          iconLocked :\n            \"<svg class=\\\"mapscroll-icon-locked\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\" >\n              <path transform=\\\"translate(1)\\\" d=\\\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\\\" />\n            </svg>\"\n          iconUnloking:\n            \"<svg class=\\\"mapscroll-icon-unlocking\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\">\n              <path transform=\\\"translate(1)\\\" d=\\\"M1376 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z\\\" />\n            </svg>\"\n          iconUnlocked:\n            \"<svg class=\\\"mapscroll-icon-unlocked\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\">\n              <path transform=\\\"translate(1)\\\" d=\\\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\\\" />\n            </svg>\"\n\n\n        ### Callbaks ###\n        onMapLock : ->\n        onMapUnlock : ->\n        ### Print Log Messges ###\n        printLog: false\n\n      opts = $.extend true, defaults, options\n\n      ### iframe Map Object ###\n      context = $(@)\n\n      ### Logging Style ###\n      Log = (message) ->\n        if opts.printLog\n          if window.console and window.console.log\n            dateTime = new Date()\n            nowTime =\n              dateTime.getHours() + \":\" +\n              dateTime.getMinutes() + \":\" +\n              dateTime.getSeconds()\n\n            console.log \"mapScrollPrevent [#{nowTime}] : #{message}\"\n\n      ### Early exit ###\n      unless context.length\n        return Log \"No Iframes detected. Try changing your \\\"selector.\\\"\"\n      else\n        Log \"#{context.length} iFrames detected.\"\n        mapCSS = \"\n          /* --- mapScrollPrevent.js CSS Classes --- */\n          .#{opts.class.overlay} {\n            position: absolute;\n            overflow:hidden;\n            cursor: pointer;\n            text-align: center;\n            background-color: rgba(0, 0, 0, 0);\n          }\n          .#{opts.class.button} {\n            text-rendering: optimizeLegibility;\n            font-family: Lato, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n            font-size: 13px;\n            padding-top: 6px;\n            padding-bottom: 6px;\n            width: 36px;\n            position: absolute;\n            right: 32px;\n            bottom: 29px;\n            border-color: rgba(0, 0, 0, 0.3);\n            color: rgba(58, 132, 223, 0);\n            background-color: rgba(255, 255, 255, 1);\n            color: rgb(58, 132, 223);\n            border-top-right-radius: 2px;\n            border-top-left-radius: 2px;\n            box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;\n          }\n          .#{opts.class.icon} {\n            position: relative;\n            z-index: 1;\n            fill: rgba(58, 132, 223, 1);\n          }\n          .#{opts.class.progress} {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            width: 0%;\n            display: block;\n            background-color: rgba(58, 132, 223, 0.4);\n          }\n          .#{opts.class.wrap} {\n            position: relative;\n            text-align: center;\n            display: inline-block;\n          }\n          .#{opts.class.wrap} iframe {\n            position: relative;\n            top: 0;\n            left: 0;\n          }\n          .#{opts.class.overlay},\n          .#{opts.class.button},\n          .#{opts.class.icon} {\n            transition: all .3s ease-in-out;\n          }\n          .#{opts.class.progress} {\n            transition: width #{opts.pressDuration/1000}s linear;\n          }\n          \"\n\n        ### Change the SVG Icon classes if founded.\n        Otherwise replace with default icons ###\n        for own item, value of opts.overlay\n          if $(\"#{value}\").find(\"svg\")\n            Log \"SVG Icons founded... Replacing classes.\"\n            opts.overlay[\"#{item}\"] =\n              $(\"#{value}\")\n                .attr(\n                  \"class\",\n                  \"#{opts.class.icon} #{$(\"#{value}\").attr(\"class\")}\"\n                ).prop('outerHTML')\n          else\n            opts.overlay[\"#{item}\"] = defaults.overlay[\"#{item}\"]\n            Log \"Invalid Icons founded... Replacing with defaults.\"\n\n        ### Creates overlay object ###\n        overlayObject =\n          $(\"<div class=\\\"#{ opts.class.overlay }\\\"></div>\")\n\n        buttonObject =\n          $(\"\n          <div class=\\\"#{opts.class.button}\\\">\n            <div class=\\\"#{opts.class.progress}\\\">\n            </div>\n            #{opts.overlay.iconLocked}\n          </div>\n          \")\n\n\n        wrapObject =\n          $(\"<div class=\\\"#{ opts.class.wrap }\\\"></div>\")\n\n        ### Apply all the css ###\n        applyCss = ->\n          $(\"head\").append \"<style rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\n          #{ mapCSS }</style>\"\n          Log \"Plugin css applied.\"\n\n        ### Wraps the iframe ###\n        wrapIframe = ->\n          ### Check first if the iframe is already wraped ###\n          unless context.closest(\".#{ opts.class.wrap }\").is \"div\"\n            context.wrap wrapObject\n            Log \"Iframe isn't wraped.\"\n\n          ### Update with DOM objects ###\n          wrapObject =\n            context\n              .closest \".#{ opts.class.wrap }\"\n              .append buttonObject\n              .append overlayObject\n\n          overlayObject =\n            wrapObject\n              .children \".#{ opts.class.overlay }\"\n\n          buttonObject =\n            wrapObject\n              .children \".#{ opts.class.button }\"\n\n          coverObject()\n          Log \"Iframe now wraped.\"\n\n        ### Dynamic Adjust ###\n        coverObject = ->\n          overlayObject\n            .height context.height()\n            .width context.width()\n            .css\n              \"top\": context.position().top\n              \"left\": context.position().left\n          Log \"Overlay positioned.\"\n\n        progress = (status=\"enable\") ->\n          progressObject = buttonObject.find(\".#{opts.class.progress}\")\n          iconObject = buttonObject.find(\".#{opts.class.icon}\")\n\n          switch status\n            when \"enable\"\n              iconObject.replaceWith(\"#{opts.overlay.iconUnloking}\")\n              progressObject.css({\"width\":\"100%\"})\n              Log \"Enabling Map.\"\n\n            when \"disable\"\n              context.css \"pointer-events\":\"none\"\n              iconObject.replaceWith($(\"#{opts.overlay.iconLocked}\"))\n              progressObject.css({\"width\":\"0%\"})\n              overlayObject.show()\n              opts.onMapLock()\n              Log \"Disabling Map.\"\n\n            when \"unlocked\"\n              context.css \"pointer-events\":\"auto\"\n              iconObject.replaceWith(\"#{opts.overlay.iconUnlocked}\")\n              progressObject.css({\"width\":\"100%\"})\n              overlayObject.hide()\n              opts.onMapUnlock()\n              Log \"Map Enabled.\"\n\n        runTimeout = ->\n          progress(status=\"unlocked\")\n          clearTimeout(@timeOut)\n\n        ### Long Press Down Event ###\n        longPressDown = ->\n          @mouseDownTime = $.now()\n          @timeOut = setTimeout runTimeout, opts.pressDuration\n          progress()\n          Log \"LongPress Started.\"\n\n        ### Long Press Up Event ###\n        longPressUp = ->\n          @mouseUpTime = $.now() - @mouseDownTime\n          clearTimeout(@timeOut)\n\n          if @mouseUpTime < opts.pressDuration\n            progress(status=\"disable\")\n          else\n            progress(status=\"unlocked\")\n\n          Log \"#{@mouseUpTime / 1000}s Pressed. \"\n          Log \"LongPress Stopped.\"\n\n        ### Bind Events ###\n        bindEvents = ->\n          $(window)\n            .bind \"resize\", coverObject\n          context\n            .bind \"resize\", coverObject\n\n          wrapObject\n            .bind \"mousedown touchstart\", longPressDown\n            .bind \"mouseup touchend\", longPressUp\n\n          Log \"Events bounded.\"\n\n        ### Init wrap and bind events ###\n        start : ->\n          Log \"Starting plugin...\"\n          applyCss()\n          wrapIframe()\n          bindEvents()\n          Log \"Plugin Started.\"\n\n        ### Removes everything ###\n        stop : ->\n          Log \"Stopping plugin...\"\n          context.removeAttr \"style\"\n          if context.parent().is \".#{ opts.class.wrap }\"\n            context.unwrap()\n\n          $(\".#{ opts.class.overlay }\").remove()\n          Log \"Plugin Stopped.\"\n"],"sourceRoot":"/source/"}
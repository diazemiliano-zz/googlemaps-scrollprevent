{"version":3,"sources":["googlemaps-scrollprevent.js","googlemaps-scrollprevent.coffee"],"names":["hasProp","hasOwnProperty","$","fn","extend","scrollprevent","options","Log","applyCss","bindEvents","buttonObject","context","coverObject","defaults","item","itemClass","longPressDown","longPressUp","mapCSS","opts","overlayObject","progress","ref","runTimeout","value","wrapIframe","wrapObject","class","wrap","overlay","button","icon","pressDuration","iconLocked","iconUnloking","iconUnlocked","onMapLock","onMapUnlock","printLog","this","message","dateTime","nowTime","window","console","log","Date","getHours","getMinutes","getSeconds","length","call","find","split","attr","html","append","closest","is","children","height","width","css","top","position","left","status","elm","iFrameObject","iconObject","progressObject","replaceWith","pointer-events","show","hide","clearTimeout","timeOut","mouseDownTime","now","setTimeout","mouseUpTime","bind","start","stop","removeAttr","parent","unwrap","remove","jQuery"],"mappings":"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","file":"googlemaps-scrollprevent.min.js","sourcesContent":["/*!\n * googlemaps-scrollprevent (jQuery Google Maps Scroll Prevent Plugin)\n * Version 0.6.4\n * URL: https://github.com/diazemiliano/googlemaps-scrollprevent\n * Description: googlemaps-scrollprevent is an easy solution to the problem of\n *              page scrolling with Google Maps.\n * Author: Emiliano Díaz https://github.com/diazemiliano/\n * Copyright: The MIT License (MIT) Copyright (c) 2016 Emiliano Díaz.\n */\n\n(function() {\n    var hasProp = {}.hasOwnProperty;\n\n    (function($) {\n        return $.fn.extend({\n            scrollprevent: function(options) {\n                var Log, applyCss, bindEvents, buttonObject, context, coverObject, defaults, item, itemClass, longPressDown, longPressUp, mapCSS, opts, overlayObject, progress, ref, runTimeout, value, wrapIframe, wrapObject;\n                defaults = {\n                    \"class\": {\n\n                        /* class for map wrap */\n                        wrap: \"mapscroll-wrap\",\n\n                        /* class for hover div */\n                        overlay: \"mapscroll-overlay\",\n\n                        /* class for progress bar */\n                        progress: \"mapscroll-progress\",\n\n                        /* class for the button */\n                        button: \"mapscroll-button\",\n\n                        /* class for svg icons */\n                        icon: \"mapscroll-icon\"\n                    },\n\n                    /* Press Duration */\n                    pressDuration: 650,\n\n                    /* Buton Icons */\n                    overlay: {\n                        iconLocked: \"<svg class=\\\"mapscroll-icon-locked mapscroll-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\" > <path transform=\\\"translate(1)\\\" d=\\\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\\\" /> </svg>\",\n                        iconUnloking: \"<svg class=\\\"mapscroll-icon-unlocking mapscroll-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\"> <path transform=\\\"translate(1)\\\" d=\\\"M1376 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z\\\" /> </svg>\",\n                        iconUnlocked: \"<svg class=\\\"mapscroll-icon-unlocked mapscroll-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\"> <path transform=\\\"translate(1)\\\" d=\\\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\\\" /> </svg>\"\n                    },\n\n                    /* Callbaks */\n                    onMapLock: function() {},\n                    onMapUnlock: function() {},\n\n                    /* Print Log Messges */\n                    printLog: false\n                };\n                opts = $.extend(true, defaults, options);\n\n                /* iframe Map Object */\n                context = $(this);\n\n                /* Logging Style */\n                Log = function(message) {\n                    var dateTime, nowTime;\n                    if (opts.printLog) {\n                        if (window.console && window.console.log) {\n                            dateTime = new Date();\n                            nowTime = dateTime.getHours() + \":\" + dateTime.getMinutes() + \":\" + dateTime.getSeconds();\n                            return console.log(\"mapScrollPrevent [\" + nowTime + \"] : \" + message);\n                        }\n                    }\n                };\n\n                /* Early exit */\n                if (!context.length) {\n                    return Log(\"No Iframes detected. Try changing your \\\"selector.\\\"\");\n                } else {\n                    Log(context.length + \" iFrames detected.\");\n                    mapCSS = \"/* --- mapScrollPrevent.js CSS Classes --- */ .\" + opts[\"class\"].overlay + \" { position: absolute; overflow:hidden; cursor: pointer; text-align: center; background-color: rgba(0, 0, 0, 0); } .\" + opts[\"class\"].button + \" { text-rendering: optimizeLegibility; font-family: Lato, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; padding-top: 15px; padding-bottom: 15px; width: 55px; position: absolute; right: 43px; bottom: 29px; border-color: rgba(0, 0, 0, 0.3); color: rgba(58, 132, 223, 0); background-color: rgba(255, 255, 255, 1); color: rgb(58, 132, 223); border-top-right-radius: 2px; border-top-left-radius: 2px; box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px; } .\" + opts[\"class\"].icon + \" { position: relative; z-index: 1; fill: rgba(58, 132, 223, 1); } .\" + opts[\"class\"].progress + \" { position: absolute; top: 0; bottom: 0; left: 0; width: 0%; display: block; background-color: rgba(58, 132, 223, 0.4); } .\" + opts[\"class\"].wrap + \" { position: relative; text-align: center; display: inline-block; } .\" + opts[\"class\"].wrap + \" iframe { position: relative; top: 0; left: 0; } .\" + opts[\"class\"].overlay + \", .\" + opts[\"class\"].button + \", .\" + opts[\"class\"].icon + \" { transition: all .3s ease-in-out; } .\" + opts[\"class\"].progress + \" { transition: width \" + (opts.pressDuration / 1000) + \"s linear; }\";\n\n                    /* Change the SVG Icon classes if founded. */\n                    ref = opts.overlay;\n                    for (item in ref) {\n                        if (!hasProp.call(ref, item)) continue;\n                        value = ref[item];\n                        if ($(value).find(\"svg\")) {\n                            Log(\"SVG Icons founded... Replacing classes in \" + value + \".\");\n                            itemClass = item.split(\"icon\");\n                            item = $(value).attr(\"class\", opts[\"class\"].icon + \"-\" + itemClass[1] + \" \" + opts[\"class\"].icon).html();\n                        }\n                    }\n\n                    /* Creates overlay object */\n                    overlayObject = $(\"<div class=\" + opts[\"class\"].overlay + \"></div>\");\n                    buttonObject = $(\"<div class=\" + opts[\"class\"].button + \"> <div class=\" + opts[\"class\"].progress + \"> </div> \" + opts.overlay.iconLocked + \" </div>\");\n                    wrapObject = $(\"<div class=\" + opts[\"class\"].wrap + \"></div>\");\n\n                    /* Apply all the css */\n                    applyCss = function() {\n                        $(\"head\").append(\"<style rel=\\\"stylesheet\\\" type=\\\"text/css\\\"> \" + mapCSS + \"</style>\");\n                        return Log(\"Plugin css applied.\");\n                    };\n\n                    /* Wraps the iframe */\n                    wrapIframe = function() {\n\n                        /* Check first if the iframe is already wraped */\n                        if (!context.closest(\".\" + opts[\"class\"].wrap).is(\"div\")) {\n                            context.wrap(wrapObject);\n                            Log(\"Iframe isn't wraped.\");\n                        }\n\n                        /* Update with DOM objects */\n                        wrapObject = context.closest(\".\" + opts[\"class\"].wrap).append(buttonObject).append(overlayObject);\n                        overlayObject = wrapObject.children(\".\" + opts[\"class\"].overlay);\n                        buttonObject = wrapObject.children(\".\" + opts[\"class\"].button);\n                        coverObject();\n                        return Log(\"Iframe now wraped.\");\n                    };\n\n                    /* Dynamic Adjust */\n                    coverObject = function() {\n                        overlayObject.height(context.height()).width(context.width()).css({\n                            \"top\": context.position().top,\n                            \"left\": context.position().left\n                        });\n                        return Log(\"Overlay positioned.\");\n                    };\n                    progress = function(status, elm) {\n                        var iFrameObject, iconObject, progressObject;\n                        elm = elm;\n                        progressObject = elm.find(\".\" + opts[\"class\"].progress);\n                        iconObject = elm.find(\".\" + opts[\"class\"].icon);\n                        overlayObject = elm.find(\".\" + opts[\"class\"].overlay);\n                        iFrameObject = elm.find(\"iframe\");\n                        switch (status) {\n                            case \"enable\":\n                                iconObject.replaceWith(\"\" + opts.overlay.iconUnloking);\n                                progressObject.css({\n                                    \"width\": \"100%\"\n                                });\n                                return Log(\"Enabling Map.\");\n                            case \"disable\":\n                                iFrameObject.css({\n                                    \"pointer-events\": \"none\"\n                                });\n                                iconObject.replaceWith(\"\" + opts.overlay.iconLocked);\n                                progressObject.css({\n                                    \"width\": \"0%\"\n                                });\n                                overlayObject.show();\n                                opts.onMapLock();\n                                return Log(\"Disabling Map.\");\n                            case \"unlocked\":\n                                iFrameObject.css({\n                                    \"pointer-events\": \"auto\"\n                                });\n                                iconObject.replaceWith(\"\" + opts.overlay.iconUnlocked);\n                                progressObject.css({\n                                    \"width\": \"100%\"\n                                });\n                                overlayObject.hide();\n                                opts.onMapUnlock();\n                                return Log(\"Map Enabled.\");\n                        }\n                    };\n                    runTimeout = function(elm) {\n                        progress(\"unlocked\", elm);\n                        return clearTimeout(this.timeOut);\n                    };\n\n                    /* Long Press Down Event */\n                    longPressDown = function() {\n                        this.mouseDownTime = $.now();\n                        this.timeOut = setTimeout(runTimeout, opts.pressDuration, $(this));\n                        progress(\"enable\", $(this));\n                        return Log(\"LongPress Started.\");\n                    };\n\n                    /* Long Press Up Event */\n                    longPressUp = function() {\n                        this.mouseUpTime = $.now() - this.mouseDownTime;\n                        clearTimeout(this.timeOut);\n                        if (this.mouseUpTime < opts.pressDuration) {\n                            progress(\"disable\", $(this));\n                        } else {\n                            progress(\"unlocked\", $(this));\n                        }\n                        Log((this.mouseUpTime / 1000) + \"s Pressed. \");\n                        return Log(\"LongPress Stopped.\");\n                    };\n\n                    /* Bind Events */\n                    bindEvents = function() {\n                        $(window).bind(\"resize\", coverObject);\n                        context.bind(\"resize\", coverObject);\n                        wrapObject.bind(\"mousedown touchstart\", longPressDown).bind(\"mouseup touchend\", longPressUp);\n                        return Log(\"Events bounded.\");\n                    };\n                    return {\n\n                        /* Init wrap and bind events */\n                        start: function() {\n                            Log(\"Starting plugin...\");\n                            if (!context.find(\"\" + opts[\"class\"].wrap)) {\n                                console.log(context.find(\"\" + opts[\"class\"].wrap));\n                                return Log(\"Already Started.\");\n                            } else {\n                                applyCss();\n                                wrapIframe();\n                                bindEvents();\n                                return Log(\"Plugin Started.\");\n                            }\n                        },\n\n                        /* Removes everything */\n                        stop: function() {\n                            Log(\"Stopping plugin...\");\n                            context.removeAttr(\"style\");\n                            if (context.parent().is(\".\" + opts[\"class\"].wrap)) {\n                                context.unwrap();\n                            }\n                            $(\".\" + opts[\"class\"].overlay).remove();\n                            return Log(\"Plugin Stopped.\");\n                        }\n                    };\n                }\n            }\n        });\n    })(jQuery);\n\n}).call(this);\n","###!\r\n# googlemaps-scrollprevent (jQuery Google Maps Scroll Prevent Plugin)\r\n# Version 0.6.4\r\n# URL: https://github.com/diazemiliano/googlemaps-scrollprevent\r\n# Description: googlemaps-scrollprevent is an easy solution to the problem of\r\n#              page scrolling with Google Maps.\r\n# Author: Emiliano Díaz https://github.com/diazemiliano/\r\n# Copyright: The MIT License (MIT) Copyright (c) 2016 Emiliano Díaz.\r\n###\r\n\r\n# Reference jQuery\r\ndo ($ = jQuery) ->\r\n\r\n  $.fn.extend\r\n    scrollprevent : (options) ->\r\n      defaults =\r\n        class:\r\n          ### class for map wrap ###\r\n          wrap: \"mapscroll-wrap\"\r\n          ### class for hover div ###\r\n          overlay: \"mapscroll-overlay\"\r\n          ### class for progress bar ###\r\n          progress: \"mapscroll-progress\"\r\n          ### class for the button ###\r\n          button: \"mapscroll-button\"\r\n          ### class for svg icons ###\r\n          icon: \"mapscroll-icon\"\r\n        ### Press Duration ###\r\n        pressDuration: 650\r\n        ### Buton Icons ###\r\n        overlay:\r\n          iconLocked :\r\n            \"<svg class=\\\"mapscroll-icon-locked mapscroll-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\" >\r\n              <path transform=\\\"translate(1)\\\" d=\\\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\\\" />\r\n            </svg>\"\r\n          iconUnloking :\r\n            \"<svg class=\\\"mapscroll-icon-unlocking mapscroll-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\">\r\n              <path transform=\\\"translate(1)\\\" d=\\\"M1376 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z\\\" />\r\n            </svg>\"\r\n          iconUnlocked :\r\n            \"<svg class=\\\"mapscroll-icon-unlocked mapscroll-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 1792 1792\\\">\r\n              <path transform=\\\"translate(1)\\\" d=\\\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\\\" />\r\n            </svg>\"\r\n\r\n        ### Callbaks ###\r\n        onMapLock : ->\r\n        onMapUnlock : ->\r\n        ### Print Log Messges ###\r\n        printLog: false\r\n\r\n      opts = $.extend true, defaults, options\r\n\r\n      ### iframe Map Object ###\r\n      context = $(@)\r\n\r\n      ### Logging Style ###\r\n      Log = (message) ->\r\n        if opts.printLog\r\n          if window.console and window.console.log\r\n            dateTime = new Date()\r\n            nowTime =\r\n              dateTime.getHours() + \":\" +\r\n              dateTime.getMinutes() + \":\" +\r\n              dateTime.getSeconds()\r\n\r\n            console.log \"mapScrollPrevent [#{nowTime}] : #{message}\"\r\n\r\n      ### Early exit ###\r\n      unless context.length\r\n        return Log \"No Iframes detected. Try changing your \\\"selector.\\\"\"\r\n      else\r\n        Log \"#{context.length} iFrames detected.\"\r\n        mapCSS = \"\r\n          /* --- mapScrollPrevent.js CSS Classes --- */\r\n          .#{opts.class.overlay} {\r\n            position: absolute;\r\n            overflow:hidden;\r\n            cursor: pointer;\r\n            text-align: center;\r\n            background-color: rgba(0, 0, 0, 0);\r\n          }\r\n          .#{opts.class.button} {\r\n            text-rendering: optimizeLegibility;\r\n            font-family: Lato, 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n            font-size: 13px;\r\n            padding-top: 15px;\r\n            padding-bottom: 15px;\r\n            width: 55px;\r\n            position: absolute;\r\n            right: 43px;\r\n            bottom: 29px;\r\n            border-color: rgba(0, 0, 0, 0.3);\r\n            color: rgba(58, 132, 223, 0);\r\n            background-color: rgba(255, 255, 255, 1);\r\n            color: rgb(58, 132, 223);\r\n            border-top-right-radius: 2px;\r\n            border-top-left-radius: 2px;\r\n            box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;\r\n          }\r\n          .#{opts.class.icon} {\r\n            position: relative;\r\n            z-index: 1;\r\n            fill: rgba(58, 132, 223, 1);\r\n          }\r\n          .#{opts.class.progress} {\r\n            position: absolute;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 0%;\r\n            display: block;\r\n            background-color: rgba(58, 132, 223, 0.4);\r\n          }\r\n          .#{opts.class.wrap} {\r\n            position: relative;\r\n            text-align: center;\r\n            display: inline-block;\r\n          }\r\n          .#{opts.class.wrap} iframe {\r\n            position: relative;\r\n            top: 0;\r\n            left: 0;\r\n          }\r\n          .#{opts.class.overlay},\r\n          .#{opts.class.button},\r\n          .#{opts.class.icon} {\r\n            transition: all .3s ease-in-out;\r\n          }\r\n          .#{opts.class.progress} {\r\n            transition: width #{opts.pressDuration/1000}s linear;\r\n          }\r\n          \"\r\n\r\n        ### Change the SVG Icon classes if founded. ###\r\n        for own item, value of opts.overlay\r\n          if $(value).find(\"svg\")\r\n            Log \"SVG Icons founded... Replacing classes in #{value}.\"\r\n            itemClass = item.split \"icon\"\r\n\r\n            item =\r\n              $(value)\r\n                .attr(\r\n                  \"class\",\r\n                  \"#{opts.class.icon}-#{itemClass[1]} #{opts.class.icon}\"\r\n                ).html()\r\n\r\n        ### Creates overlay object ###\r\n        overlayObject =\r\n          $(\"<div class=#{ opts.class.overlay }></div>\")\r\n\r\n        buttonObject =\r\n          $(\"\r\n          <div class=#{opts.class.button}>\r\n            <div class=#{opts.class.progress}>\r\n            </div>\r\n            #{opts.overlay.iconLocked}\r\n          </div>\r\n          \")\r\n\r\n        wrapObject =\r\n          $(\"<div class=#{ opts.class.wrap }></div>\")\r\n\r\n        ### Apply all the css ###\r\n        applyCss = ->\r\n          $(\"head\").append \"<style rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\r\n          #{ mapCSS }</style>\"\r\n          Log \"Plugin css applied.\"\r\n\r\n        ### Wraps the iframe ###\r\n        wrapIframe = ->\r\n          ### Check first if the iframe is already wraped ###\r\n          unless context.closest(\".#{ opts.class.wrap }\").is \"div\"\r\n            context.wrap wrapObject\r\n            Log \"Iframe isn't wraped.\"\r\n\r\n          ### Update with DOM objects ###\r\n          wrapObject =\r\n            context\r\n              .closest \".#{ opts.class.wrap }\"\r\n              .append buttonObject\r\n              .append overlayObject\r\n\r\n          overlayObject =\r\n            wrapObject\r\n              .children \".#{ opts.class.overlay }\"\r\n\r\n          buttonObject =\r\n            wrapObject\r\n              .children \".#{ opts.class.button }\"\r\n\r\n          coverObject()\r\n          Log \"Iframe now wraped.\"\r\n\r\n        ### Dynamic Adjust ###\r\n        coverObject = ->\r\n          overlayObject\r\n            .height context.height()\r\n            .width context.width()\r\n            .css\r\n              \"top\": context.position().top\r\n              \"left\": context.position().left\r\n          Log \"Overlay positioned.\"\r\n\r\n        progress = (status, elm) ->\r\n          elm = elm\r\n          progressObject = elm.find \".#{opts.class.progress}\"\r\n          iconObject = elm.find \".#{opts.class.icon}\"\r\n          overlayObject = elm.find \".#{ opts.class.overlay}\"\r\n          iFrameObject = elm.find \"iframe\"\r\n\r\n          switch status\r\n            when \"enable\"\r\n              iconObject.replaceWith \"#{opts.overlay.iconUnloking}\"\r\n              progressObject.css {\"width\":\"100%\"}\r\n              Log \"Enabling Map.\"\r\n\r\n            when \"disable\"\r\n              iFrameObject.css {\"pointer-events\":\"none\"}\r\n              iconObject.replaceWith \"#{opts.overlay.iconLocked}\"\r\n              progressObject.css {\"width\":\"0%\"}\r\n              overlayObject.show()\r\n              opts.onMapLock()\r\n              Log \"Disabling Map.\"\r\n\r\n            when \"unlocked\"\r\n              iFrameObject.css {\"pointer-events\":\"auto\"}\r\n              iconObject.replaceWith \"#{opts.overlay.iconUnlocked}\"\r\n              progressObject.css {\"width\":\"100%\"}\r\n              overlayObject.hide()\r\n              opts.onMapUnlock()\r\n              Log \"Map Enabled.\"\r\n\r\n        runTimeout = (elm)->\r\n          progress(\"unlocked\", elm)\r\n          clearTimeout(@timeOut)\r\n\r\n        ### Long Press Down Event ###\r\n        longPressDown = ->\r\n          @mouseDownTime = $.now()\r\n          @timeOut = setTimeout runTimeout, opts.pressDuration, $(@)\r\n\r\n          progress(\"enable\", $(@))\r\n          Log \"LongPress Started.\"\r\n\r\n        ### Long Press Up Event ###\r\n        longPressUp = ->\r\n          @mouseUpTime = $.now() - @mouseDownTime\r\n          clearTimeout(@timeOut)\r\n\r\n          if @mouseUpTime < opts.pressDuration\r\n            progress(\"disable\", $(@))\r\n          else\r\n            progress(\"unlocked\", $(@))\r\n\r\n          Log \"#{@mouseUpTime / 1000}s Pressed. \"\r\n          Log \"LongPress Stopped.\"\r\n\r\n        ### Bind Events ###\r\n        bindEvents = ->\r\n          $(window)\r\n            .bind \"resize\", coverObject\r\n          context\r\n            .bind \"resize\", coverObject\r\n\r\n          wrapObject\r\n            .bind \"mousedown touchstart\", longPressDown\r\n            .bind \"mouseup touchend\", longPressUp\r\n\r\n          Log \"Events bounded.\"\r\n\r\n        ### Init wrap and bind events ###\r\n        start : ->\r\n          Log \"Starting plugin...\"\r\n          unless context.find \"#{opts.class.wrap}\"\r\n            console.log context.find \"#{opts.class.wrap}\"\r\n            return Log \"Already Started.\"\r\n          else\r\n            applyCss()\r\n            wrapIframe()\r\n            bindEvents()\r\n            Log \"Plugin Started.\"\r\n\r\n        ### Removes everything ###\r\n        stop : ->\r\n          Log \"Stopping plugin...\"\r\n          context.removeAttr \"style\"\r\n          if context.parent().is \".#{ opts.class.wrap }\"\r\n            context.unwrap()\r\n\r\n          $(\".#{ opts.class.overlay }\").remove()\r\n          Log \"Plugin Stopped.\"\r\n"],"sourceRoot":"/source/"}